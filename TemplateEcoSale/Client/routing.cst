<%@ CodeTemplate Language="C#" TargetLanguage="C#" Debug="False" Inherits="EntityCodeTemplate" CompilerVersion="v3.5" Encoding="UTF-8" Name="EF Entity" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\Common" %>
<%@ Assembly Name="Generator.QuickStart" Path="..\Common" %>
<%@ Assembly Name="Generator.Microsoft.Frameworks" Path="..\Common" %>

<%@ Property Name="IsVietNameseTableSetting" Type="System.Boolean" Default="false" Description="Sử dụng tên bảng kiểu VietNam (Ngăn cách nhau bởi dấu _ ) "%>
<%@ Property Name="EntityNamespace" Type="System.String" Default="" %>

<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="Generator.QuickStart" %>
<%@ Import Namespace="Generator.Microsoft.Frameworks" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Text" %>

<%@ Property Category="Table" Name="SourceDatabase" Type="DatabaseSchema" Description="Đường dẫn connection string" %>
<%@ Property Category="Table" Name="SourceTables" Type="TableSchemaCollection" Description="Danh sách các bảng muốn gen code" %>

<%@ Register Name="CommonService" Template=".\CommonService.cst" %>

import { Routes, RouterModule } from '@angular/router';
import {  <%=CommonService.GetModuleName(EntityNamespace)%>Component } from './<%=CommonService.GetModuleName(EntityNamespace).ToLower()%>.component';

const routes: Routes = [
    {
        path:'',
        component: <%=CommonService.GetModuleName(EntityNamespace)%>Component,
        children: [
            <%=RenderRoutes()%>
        ]
    }
];
export const <%=CommonService.GetModuleName(EntityNamespace)%>Routes = RouterModule.forChild(routes);

<script runat="template">
    private string RenderRoutes()
    {
        string routes = "";
        string lastString = ",\n";
        List<string> lstName = new List<string>();
        for (int i = 0; i < SourceTables.Count; i++)
        {
            string tableName = SourceTables[i].Name;
            var LowerName = tableName.ToLower().Replace('_', '-');
            lstName.Add(LowerName);
            string name = CommonService.GetNameFile(tableName, IsVietNameseTableSetting);
            routes += CommonService.Tab(2, false) + "{" + CommonService.Tab(3) + "path: '" + LowerName + "'," 
                    + CommonService.Tab(3) + "loadChildren: './" + name + "/" + name + ".module#" + tableName + "Module'" 
                    + CommonService.Tab(2) + "}" + lastString;
        }
        if (routes.Length > 1)
        {
            return (CommonService.Tab(2, false) + "{" + CommonService.Tab(3) + "path: ''," 
                    + CommonService.Tab(3) + "redirectTo: '" + lstName[0] + "'," 
                    + CommonService.Tab(3) + "pathMatch: 'full'" 
                    + CommonService.Tab(2) + "}" + lastString
                    + routes.Substring(0, routes.Length - lastString.Length)).Substring(CommonService.Tab(2, false).Length);
        }
        return routes;
    }
</script>


