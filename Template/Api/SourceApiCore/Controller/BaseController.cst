<%@ CodeTemplate Language="C#" TargetLanguage="C#" Debug="False" Inherits="EntityCodeTemplate" CompilerVersion="v3.5" Encoding="UTF-8" Description="EF Entity" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.SchemaHelper" Path="..\..\..\Common" %>
<%@ Assembly Name="Generator.QuickStart" Path="..\..\..\Common" %>
<%@ Assembly Name="Generator.Microsoft.Frameworks" Path="..\..\..\Common" %>

<%@ Import Namespace="CodeSmith.SchemaHelper" %>
<%@ Import Namespace="Generator.QuickStart" %>
<%@ Import Namespace="Generator.Microsoft.Frameworks" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Text" %>
<%@ Property Name="UsingSingularizeString" Type="System.Boolean" Default="true" %>

<%@ Register Name="CommonService" Template="..\..\CommonService.cst" %>


<%@ Property Optional="False" Name="ScopeService" Type="System.String" Category="2.Common" Description="Tên dịch vụ" %>

using SB.Core;
using Microsoft.AspNetCore.Mvc;

namespace <%=ScopeService %>.API.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class BaseController : ControllerBase
    {
         public UserLogin CurrentUser => (UserLogin)HttpContext.Items["Account"];
         
         protected virtual IActionResult ResponseResult<T>(IMethodResult<T> result)
            {

                bool flag = !result.Success;
                IActionResult result2;
                if (flag)
                {
                    int? status = result.Status;
                    int num = 403;
                    bool flag2 = status.GetValueOrDefault() == num & status != null;
                    if (flag2)
                    {
                        result2 = Ok(result);
                    }
                    else
                    {
                        status = result.Status;
                        num = 404;
                        bool flag3 = status.GetValueOrDefault() == num & status != null;
                        if (flag3)
                        {
                            result2 = Ok(result);
                        }
                        else
                        {
                            status = result.Status;
                            num = 409;
                            bool flag4 = status.GetValueOrDefault() == num & status != null;
                            if (flag4)
                            {
                                result2 = this.StatusCode(StatusCodes.Status409Conflict);
                            }
                            else
                            {
                                result2 = Ok(result);
                            }
                        }
                    }
                }
                else
                {
                    result2 = Ok(result);
                }
                return result2;
            }

    }
}

